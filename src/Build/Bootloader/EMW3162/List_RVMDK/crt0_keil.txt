; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\..\build\bootloader\emw3162\obj_rvmdk\crt0_keil.o --asm_dir=..\..\..\Build\Bootloader\EMW3162\List_RVMDK\ --list_dir=..\..\..\Build\Bootloader\EMW3162\List_RVMDK\ --depend=..\..\..\build\bootloader\emw3162\obj_rvmdk\crt0_keil.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=1,1293 -I..\..\..\include -I..\..\..\Platform\Common\Cortex-M4\CMSIS -I..\..\..\Platform\Common\Cortex-M4\STM32F4xx\STM32F4xx_Drv -I..\..\..\Platform\Common\Cortex-M4\STM32F4xx -I..\..\..\Platform\Common\Cortex-M4 -I..\..\..\Platform\Common\Cortex-M4\STM32F4xx\STM32F4xx_Drv\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\Bootloader -I..\..\..\MICO -I..\..\..\Platform\EMW3162 -I..\..\..\External -I..\..\..\Library\support -I..\..\..\Platform\include -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.6\Device\Include -D__MICROLIB -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DBOOTLOADER -DSIZE_OPTIMIZE ..\..\..\Platform\Common\Cortex-M3\crt0_KEIL.c]
                          THUMB

                          AREA ||i.__low_level_init||, CODE, READONLY, ALIGN=2

                  __low_level_init PROC
;;;44     /* device. */
;;;45     int __low_level_init( void )
000000  4902              LDR      r1,|L1.12|
;;;46     {
;;;47          extern void init_clocks(void);
;;;48          extern void init_memory(void);
;;;49          /* IAR allows init functions in __low_level_init(), but it is run before global
;;;50           * variables have been initialised, so the following init still needs to be done
;;;51           * When using GCC, this is done in crt0_GCC.c
;;;52           */
;;;53          
;;;54     #ifdef BOOTLOADER  
;;;55           /* Set the Vector Table base location at 0x20000000 */ 
;;;56          *SCB_VTOR_ADDRESS = 0x20000000;
000002  f04f5000          MOV      r0,#0x20000000
000006  6008              STR      r0,[r1,#0]
;;;57     #else
;;;58          /* Setup the interrupt vectors address */
;;;59          *SCB_VTOR_ADDRESS = (unsigned long)&Image$$ER_IROM1$$Base;
;;;60          init_clocks();
;;;61          init_memory();
;;;62     #endif
;;;63     
;;;64          return 1; /* return 1 to force memory init */
000008  2001              MOVS     r0,#1
;;;65     }
00000a  4770              BX       lr
                          ENDP

                  |L1.12|
                          DCD      0xe000ed08
