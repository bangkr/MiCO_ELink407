L 1 "..\..\..\Platform\Common\Cortex-M3\STM32F2xx\STM32F2xx_Drv\STM32F2xx_StdPeriph_Driver\src\stm32f2xx_exti.c"
N/**
N  ******************************************************************************
N  * @file    stm32f2xx_exti.c
N  * @author  MCD Application Team
N  * @version V1.1.2
N  * @date    05-March-2012 
N  * @brief   This file provides firmware functions to manage the following 
N  *          functionalities of the EXTI peripheral:           
N  *           - Initialization and Configuration
N  *           - Interrupts and flags management
N  *
N  *  @verbatim  
N  *  
N  *          ===================================================================
N  *                                     EXTI features
N  *          ===================================================================
N  *    
N  *          External interrupt/event lines are mapped as following:
N  *            1- All available GPIO pins are connected to the 16 external 
N  *               interrupt/event lines from EXTI0 to EXTI15.
N  *            2- EXTI line 16 is connected to the PVD Output
N  *            3- EXTI line 17 is connected to the RTC Alarm event
N  *            4- EXTI line 18 is connected to the USB OTG FS Wakeup from suspend event                                    
N  *            5- EXTI line 19 is connected to the Ethernet Wakeup event
N  *            6- EXTI line 20 is connected to the USB OTG HS (configured in FS) Wakeup event 
N  *            7- EXTI line 21 is connected to the RTC Tamper and Time Stamp events                                               
N  *            8- EXTI line 22 is connected to the RTC Wakeup event
N  *        
N  *          ===================================================================
N  *                                 How to use this driver
N  *          ===================================================================  
N  *              
N  *          In order to use an I/O pin as an external interrupt source, follow
N  *          steps below:
N  *            1- Configure the I/O in input mode using GPIO_Init()
N  *            2- Select the input source pin for the EXTI line using SYSCFG_EXTILineConfig()
N  *            3- Select the mode(interrupt, event) and configure the trigger 
N  *               selection (Rising, falling or both) using EXTI_Init()
N  *            4- Configure NVIC IRQ channel mapped to the EXTI line using NVIC_Init()
N  *   
N  *  @note  SYSCFG APB clock must be enabled to get write access to SYSCFG_EXTICRx
N  *         registers using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
N  *          
N  *  @endverbatim                  
N  *
N  ******************************************************************************
N  * @attention
N  *
N  * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
N  *
N  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
N  * You may not use this file except in compliance with the License.
N  * You may obtain a copy of the License at:
N  *
N  *        http://www.st.com/software_license_agreement_liberty_v2
N  *
N  * Unless required by applicable law or agreed to in writing, software 
N  * distributed under the License is distributed on an "AS IS" BASIS, 
N  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
N  * See the License for the specific language governing permissions and
N  * limitations under the License.
N  *
N  ******************************************************************************
N  */
N
N/* Includes ------------------------------------------------------------------*/
C "..\..\..\Platform\Common\Cortex-M3\STM32F2xx\STM32F2xx_Drv\STM32F2xx_StdPeriph_Driver\src\stm32f2xx_exti.c" 67 28 cannot open source input file "stm32f2xx_exti.h": No such file or directory
N#include "stm32f2xx_exti.h"
