; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\..\build\bootloader\emw3162\obj_rvmdk\menu.o --asm_dir=..\..\..\Build\Bootloader\EMW3162\List_RVMDK\ --list_dir=..\..\..\Build\Bootloader\EMW3162\List_RVMDK\ --depend=..\..\..\build\bootloader\emw3162\obj_rvmdk\menu.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=1,1293 -I..\..\..\include -I..\..\..\Platform\Common\Cortex-M4\CMSIS -I..\..\..\Platform\Common\Cortex-M4\STM32F4xx\STM32F4xx_Drv -I..\..\..\Platform\Common\Cortex-M4\STM32F4xx -I..\..\..\Platform\Common\Cortex-M4 -I..\..\..\Platform\Common\Cortex-M4\STM32F4xx\STM32F4xx_Drv\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\Bootloader -I..\..\..\MICO -I..\..\..\Platform\EMW3162 -I..\..\..\External -I..\..\..\Library\support -I..\..\..\Platform\include -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.6\Device\Include -D__MICROLIB -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DBOOTLOADER -DSIZE_OPTIMIZE ..\..\..\Bootloader\menu.c]
                          THUMB

                          AREA ||i.Main_Menu||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  Main_Menu PROC
;;;226      */
;;;227    void Main_Menu(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;228    {
000004  b0b9              SUB      sp,sp,#0xe4
;;;229      char cmdbuf [CMD_STRING_SIZE] = {0}, cmdname[15] = {0};     /* command input buffer        */
000006  2180              MOVS     r1,#0x80
000008  a80c              ADD      r0,sp,#0x30
00000a  f7fffffe          BL       __aeabi_memclr4
00000e  2700              MOVS     r7,#0
;;;230      int i, j;                                       /* index for command buffer    */
;;;231      int targetFlash;
;;;232      char startAddressStr[10], endAddressStr[10];
;;;233      int32_t startAddress, endAddress;
;;;234      bool inputFlashArea = false;
;;;235    
;;;236      while (1)  {                                    /* loop forever                */
;;;237        printf ("\n\rMXCHIP> ");
;;;238        getline (&cmdbuf[0], sizeof (cmdbuf));        /* input command line          */
;;;239    
;;;240        for (i = 0; cmdbuf[i] == ' '; i++);           /* skip blanks on head         */
;;;241        for (; cmdbuf[i] != 0; i++)  {                /* convert to upper characters */
;;;242          cmdbuf[i] = toupper(cmdbuf[i]);
;;;243        }
;;;244    
;;;245        for (i = 0; cmdbuf[i] == ' '; i++);        /* skip blanks on head         */
;;;246        for(j=0; cmdbuf[i] != ' '&&cmdbuf[i] != 0; i++,j++)  {         /* find command name       */
;;;247          cmdname[j] = cmdbuf[i];
;;;248        }
;;;249        cmdname[j] = '\0';
;;;250    
;;;251        /***************** Command "0" or "BOOTUPDATE": Update the application  *************************/
;;;252        if(strcmp(cmdname, "BOOTUPDATE") == 0 || strcmp(cmdname, "0") == 0) {
;;;253          if (findCommandPara(cmdbuf, "r", NULL, 0) != -1){
;;;254            printf ("\n\rRead Bootloader only......\n\r");
;;;255            MicoFlashInitialize(MICO_FLASH_FOR_BOOT);
;;;256            SerialUpload(MICO_FLASH_FOR_BOOT, BOOT_START_ADDRESS, "BootLoaderImage.bin", BOOT_FLASH_SIZE);
;;;257            MicoFlashFinalize(MICO_FLASH_FOR_BOOT);
;;;258            continue;
;;;259          }
;;;260          printf ("\n\rUpdating Bootloader......\n\r");
;;;261          SerialDownload(MICO_FLASH_FOR_BOOT, BOOT_START_ADDRESS, BOOT_FLASH_SIZE);
;;;262        }
;;;263    
;;;264        /***************** Command "1" or "FWUPDATE": Update the MICO application  *************************/
;;;265        else if(strcmp(cmdname, "FWUPDATE") == 0 || strcmp(cmdname, "1") == 0)	{
;;;266          if (findCommandPara(cmdbuf, "r", NULL, 0) != -1){
;;;267            printf ("\n\rRead MICO application only......\n\r");
;;;268            MicoFlashInitialize(MICO_FLASH_FOR_APPLICATION);
;;;269            SerialUpload(MICO_FLASH_FOR_APPLICATION, APPLICATION_START_ADDRESS, "ApplicationImage.bin", APPLICATION_FLASH_SIZE);
000010  f8df93a8          LDR      r9,|L1.956|
;;;270            MicoFlashFinalize(MICO_FLASH_FOR_APPLICATION);
;;;271            continue;
;;;272          }
;;;273          printf ("\n\rUpdating MICO application......\n\r");
;;;274          SerialDownload(MICO_FLASH_FOR_APPLICATION, APPLICATION_START_ADDRESS, APPLICATION_FLASH_SIZE); 							   	
;;;275        }
;;;276    
;;;277        /***************** Command "2" or "DRIVERUPDATE": Update the RF driver  *************************/
;;;278    
;;;279        else if(strcmp(cmdname, "DRIVERUPDATE") == 0 || strcmp(cmdname, "2") == 0) {
;;;280    #ifdef MICO_FLASH_FOR_DRIVER
;;;281          if (findCommandPara(cmdbuf, "r", NULL, 0) != -1){
;;;282            printf ("\n\rRead RF driver only......\n\r");
;;;283            MicoFlashInitialize(MICO_FLASH_FOR_DRIVER);
;;;284            SerialUpload(MICO_FLASH_FOR_DRIVER, DRIVER_START_ADDRESS, "DriverImage.bin", DRIVER_FLASH_SIZE);
000014  f8dfa3a8          LDR      r10,|L1.960|
;;;285            MicoFlashFinalize(MICO_FLASH_FOR_DRIVER);
;;;286            continue;
;;;287          }
;;;288          printf ("\n\rUpdating RF driver......\n\r");
;;;289          SerialDownload(MICO_FLASH_FOR_DRIVER, DRIVER_START_ADDRESS, DRIVER_FLASH_SIZE);  
;;;290    #else
;;;291          printf ("\n\rNo independ flash memory for RF driver, exiting...\n\r");
;;;292    #endif
;;;293        }
;;;294    
;;;295        /***************** Command "3" or "PARAUPDATE": Update the application  *************************/
;;;296        else if(strcmp(cmdname, "PARAUPDATE") == 0 || strcmp(cmdname, "3") == 0)  {
;;;297          if (findCommandPara(cmdbuf, "e", NULL, 0) != -1){
;;;298            printf ("\n\rErasing MICO settings only......\n\r");
;;;299            MicoFlashInitialize(MICO_FLASH_FOR_PARA);
;;;300            MicoFlashErase(MICO_FLASH_FOR_PARA, PARA_START_ADDRESS, PARA_END_ADDRESS);
000018  f8dfb3a8          LDR      r11,|L1.964|
;;;301            MicoFlashFinalize(MICO_FLASH_FOR_PARA);
;;;302            continue;
;;;303          }
;;;304          printf ("\n\rUpdating MICO settings......\n\r");
;;;305          SerialDownload(MICO_FLASH_FOR_PARA, PARA_START_ADDRESS, PARA_FLASH_SIZE);                        
;;;306        }
;;;307    
;;;308        /***************** Command "4" or "FLASHUPDATE": : Update the Flash  *************************/
;;;309        else if(strcmp(cmdname, "FLASHUPDATE") == 0 || strcmp(cmdname, "4") == 0) {
;;;310          if (findCommandPara(cmdbuf, "i", NULL, 0) != -1){
;;;311            targetFlash = MICO_INTERNAL_FLASH;
;;;312          }else if(findCommandPara(cmdbuf, "s", NULL, 200) != -1){
;;;313            targetFlash = MICO_SPI_FLASH;
;;;314          }else{
;;;315            printf ("\n\rUnkown target type! Exiting...\n\r");
;;;316            continue;
;;;317          }
;;;318    
;;;319          inputFlashArea = false;
;;;320          if (findCommandPara(cmdbuf, "start", startAddressStr, 10) != -1){
;;;321            if(Str2Int((uint8_t *)startAddressStr, &startAddress)==0){ //Found Flash start address
;;;322              printf ("\n\rIllegal flash start address.\n\r");
;;;323              continue;
;;;324            }else{
;;;325              if (findCommandPara(cmdbuf, "end", endAddressStr, 10) != -1){ //Found Flash end address
;;;326                if(Str2Int((uint8_t *)endAddressStr, &endAddress)==0){
;;;327                  printf ("\n\rIllegal flash end address.\n\r");
;;;328                  continue;
;;;329                }else{
;;;330                  inputFlashArea = true;
;;;331                }
;;;332              }else{
;;;333                printf ("\n\rFlash end address not found.\n\r");
;;;334                continue;
;;;335              }
;;;336            }
;;;337          }
;;;338    
;;;339          if(endAddress<startAddress && inputFlashArea == true) {
;;;340            printf ("\n\rIllegal flash address.\n\r");
;;;341            continue;
;;;342          }
;;;343    
;;;344          if(inputFlashArea != true){
;;;345            if(targetFlash == MICO_INTERNAL_FLASH){
;;;346              startAddress = INTERNAL_FLASH_START_ADDRESS;
;;;347              endAddress = INTERNAL_FLASH_END_ADDRESS;
00001c  4eea              LDR      r6,|L1.968|
00001e  972c              STR      r7,[sp,#0xb0]         ;229
000020  972d              STR      r7,[sp,#0xb4]         ;229
000022  972e              STR      r7,[sp,#0xb8]         ;229
000024  f04f6800          MOV      r8,#0x8000000         ;256
000028  972f              STR      r7,[sp,#0xbc]
                  |L1.42|
00002a  a0e8              ADR      r0,|L1.972|
00002c  f7fffffe          BL       __2printf
000030  2180              MOVS     r1,#0x80              ;238
000032  a80c              ADD      r0,sp,#0x30           ;238
000034  f7fffffe          BL       getline
000038  2400              MOVS     r4,#0                 ;240
00003a  ad0c              ADD      r5,sp,#0x30           ;229
00003c  e000              B        |L1.64|
                  |L1.62|
00003e  1c64              ADDS     r4,r4,#1              ;240
                  |L1.64|
000040  5d28              LDRB     r0,[r5,r4]            ;240
000042  2820              CMP      r0,#0x20              ;240
000044  d0fb              BEQ      |L1.62|
000046  e003              B        |L1.80|
                  |L1.72|
000048  f7fffffe          BL       toupper
00004c  5528              STRB     r0,[r5,r4]            ;242
00004e  1c64              ADDS     r4,r4,#1              ;242
                  |L1.80|
000050  5d28              LDRB     r0,[r5,r4]            ;241
000052  2800              CMP      r0,#0                 ;241
000054  d1f8              BNE      |L1.72|
000056  e000              B        |L1.90|
                  |L1.88|
000058  1c40              ADDS     r0,r0,#1              ;241
                  |L1.90|
00005a  5c29              LDRB     r1,[r5,r0]            ;245
00005c  2920              CMP      r1,#0x20              ;245
00005e  d0fb              BEQ      |L1.88|
000060  2100              MOVS     r1,#0                 ;246
000062  ab2c              ADD      r3,sp,#0xb0           ;229
000064  e005              B        |L1.114|
                  |L1.102|
000066  1c40              ADDS     r0,r0,#1              ;247
000068  545a              STRB     r2,[r3,r1]            ;247
00006a  5c2a              LDRB     r2,[r5,r0]            ;246
00006c  1c49              ADDS     r1,r1,#1              ;246
00006e  2a20              CMP      r2,#0x20              ;246
000070  d002              BEQ      |L1.120|
                  |L1.114|
000072  5c2a              LDRB     r2,[r5,r0]            ;246
000074  2a00              CMP      r2,#0                 ;246
000076  d1f6              BNE      |L1.102|
                  |L1.120|
000078  545f              STRB     r7,[r3,r1]            ;249
00007a  a1d7              ADR      r1,|L1.984|
00007c  4618              MOV      r0,r3                 ;252
00007e  f7fffffe          BL       strcmp
000082  2800              CMP      r0,#0                 ;252
000084  d074              BEQ      |L1.368|
000086  a1d7              ADR      r1,|L1.996|
000088  a82c              ADD      r0,sp,#0xb0           ;252
00008a  f7fffffe          BL       strcmp
00008e  2800              CMP      r0,#0                 ;252
000090  d06e              BEQ      |L1.368|
000092  a1d5              ADR      r1,|L1.1000|
000094  a82c              ADD      r0,sp,#0xb0           ;265
000096  f7fffffe          BL       strcmp
00009a  2800              CMP      r0,#0                 ;265
00009c  d067              BEQ      |L1.366|
00009e  a1d5              ADR      r1,|L1.1012|
0000a0  a82c              ADD      r0,sp,#0xb0           ;265
0000a2  f7fffffe          BL       strcmp
0000a6  2800              CMP      r0,#0                 ;265
0000a8  d07d              BEQ      |L1.422|
0000aa  a1d3              ADR      r1,|L1.1016|
0000ac  a82c              ADD      r0,sp,#0xb0           ;279
0000ae  f7fffffe          BL       strcmp
0000b2  2800              CMP      r0,#0                 ;279
                  |L1.180|
0000b4  d06f              BEQ      |L1.406|
0000b6  a1d4              ADR      r1,|L1.1032|
0000b8  a82c              ADD      r0,sp,#0xb0           ;279
0000ba  f7fffffe          BL       strcmp
0000be  2800              CMP      r0,#0                 ;279
0000c0  d0f8              BEQ      |L1.180|
0000c2  a1d2              ADR      r1,|L1.1036|
0000c4  a82c              ADD      r0,sp,#0xb0           ;296
0000c6  f7fffffe          BL       strcmp
0000ca  2800              CMP      r0,#0                 ;296
                  |L1.204|
0000cc  d07c              BEQ      |L1.456|
0000ce  a1d2              ADR      r1,|L1.1048|
0000d0  a82c              ADD      r0,sp,#0xb0           ;296
0000d2  f7fffffe          BL       strcmp
0000d6  2800              CMP      r0,#0                 ;296
0000d8  d0f8              BEQ      |L1.204|
0000da  a1d0              ADR      r1,|L1.1052|
0000dc  a82c              ADD      r0,sp,#0xb0           ;309
0000de  f7fffffe          BL       strcmp
0000e2  2800              CMP      r0,#0                 ;309
                  |L1.228|
0000e4  d071              BEQ      |L1.458|
0000e6  a1d0              ADR      r1,|L1.1064|
0000e8  a82c              ADD      r0,sp,#0xb0           ;309
0000ea  f7fffffe          BL       strcmp
0000ee  2800              CMP      r0,#0                 ;309
0000f0  d0f8              BEQ      |L1.228|
;;;348            }else{
;;;349    #ifdef USE_MICO_SPI_FLASH        
;;;350              startAddress = SPI_FLASH_START_ADDRESS;
;;;351              endAddress = SPI_FLASH_END_ADDRESS;
;;;352    #else
;;;353              printf ("\n\rSPI Flash not exist\n\r");
;;;354              continue;
;;;355    #endif
;;;356            }
;;;357          }
;;;358    
;;;359          if (findCommandPara(cmdbuf, "e", NULL, 0) != -1){
;;;360            printf ("\n\rErasing flash content From 0x%x to 0x%x\n\r", startAddress, endAddress);
;;;361            MicoFlashInitialize((mico_flash_t)targetFlash);
;;;362            MicoFlashErase((mico_flash_t)targetFlash, startAddress, endAddress);
;;;363            MicoFlashFinalize((mico_flash_t)targetFlash);
;;;364            continue;
;;;365          }
;;;366    
;;;367          if (findCommandPara(cmdbuf, "r", NULL, 0) != -1){
;;;368            printf ("\n\rRead flash content From 0x%x to 0x%x\n\r", startAddress, endAddress);
;;;369            MicoFlashInitialize((mico_flash_t)targetFlash);
;;;370            SerialUpload((mico_flash_t)targetFlash, startAddress, "FlashImage.bin", endAddress-startAddress+1);
;;;371            MicoFlashFinalize((mico_flash_t)targetFlash);
;;;372            continue;
;;;373          }
;;;374    
;;;375          printf ("\n\rUpdating flash content From 0x%x to 0x%x\n\r", startAddress, endAddress);
;;;376          SerialDownload((mico_flash_t)targetFlash, startAddress, endAddress-startAddress+1);                           
;;;377        }
;;;378    
;;;379        /***************** Command: Reboot *************************/
;;;380        else if(strcmp(cmdname, "MEMORYMAP") == 0 || strcmp(cmdname, "5") == 0)  {
0000f2  a1ce              ADR      r1,|L1.1068|
0000f4  a82c              ADD      r0,sp,#0xb0
0000f6  f7fffffe          BL       strcmp
0000fa  2800              CMP      r0,#0
                  |L1.252|
0000fc  d066              BEQ      |L1.460|
0000fe  a1ce              ADR      r1,|L1.1080|
000100  a82c              ADD      r0,sp,#0xb0
000102  f7fffffe          BL       strcmp
000106  2800              CMP      r0,#0
000108  d0f8              BEQ      |L1.252|
;;;381    #if defined MICO_FLASH_FOR_UPDATE && defined MICO_FLASH_FOR_DRIVER
;;;382          printf(MEMMAP, flash_name[MICO_FLASH_FOR_BOOT],BOOT_START_ADDRESS,BOOT_END_ADDRESS,\
;;;383                         flash_name[MICO_FLASH_FOR_PARA], PARA_START_ADDRESS, PARA_END_ADDRESS,\
;;;384                         flash_name[MICO_FLASH_FOR_APPLICATION], APPLICATION_START_ADDRESS, APPLICATION_END_ADDRESS,\
;;;385                         flash_name[MICO_FLASH_FOR_UPDATE], UPDATE_START_ADDRESS, UPDATE_END_ADDRESS,\
;;;386                         flash_name[MICO_FLASH_FOR_DRIVER], DRIVER_START_ADDRESS, DRIVER_END_ADDRESS);
;;;387    #endif
;;;388    #if !defined MICO_FLASH_FOR_UPDATE && defined MICO_FLASH_FOR_DRIVER
;;;389          printf(MEMMAP, flash_name[MICO_FLASH_FOR_BOOT],BOOT_START_ADDRESS,BOOT_END_ADDRESS,\
;;;390                         flash_name[MICO_FLASH_FOR_PARA], PARA_START_ADDRESS, PARA_END_ADDRESS,\
;;;391                         flash_name[MICO_FLASH_FOR_APPLICATION], APPLICATION_START_ADDRESS, APPLICATION_END_ADDRESS,\
;;;392                         flash_name[MICO_FLASH_FOR_DRIVER], DRIVER_START_ADDRESS, DRIVER_END_ADDRESS);
;;;393    #endif
;;;394    #if !defined MICO_FLASH_FOR_UPDATE && !defined MICO_FLASH_FOR_DRIVER
;;;395          printf(MEMMAP, flash_name[MICO_FLASH_FOR_BOOT],BOOT_START_ADDRESS,BOOT_END_ADDRESS,\
;;;396                         flash_name[MICO_FLASH_FOR_PARA], PARA_START_ADDRESS, PARA_END_ADDRESS,\
;;;397                         flash_name[MICO_FLASH_FOR_APPLICATION], APPLICATION_START_ADDRESS, APPLICATION_END_ADDRESS);
;;;398    #endif 
;;;399        }
;;;400        /***************** Command: Excute the application *************************/
;;;401        else if(strcmp(cmdname, "BOOT") == 0 || strcmp(cmdname, "6") == 0)	{
00010a  a1cc              ADR      r1,|L1.1084|
00010c  a82c              ADD      r0,sp,#0xb0
00010e  f7fffffe          BL       strcmp
000112  2800              CMP      r0,#0
                  |L1.276|
000114  d077              BEQ      |L1.518|
000116  a1cb              ADR      r1,|L1.1092|
000118  a82c              ADD      r0,sp,#0xb0
00011a  f7fffffe          BL       strcmp
00011e  2800              CMP      r0,#0
000120  d0f8              BEQ      |L1.276|
;;;402          printf ("\n\rBooting.......\n\r");
;;;403          startApplication();
;;;404        }
;;;405    
;;;406       /***************** Command: Reboot *************************/
;;;407        else if(strcmp(cmdname, "REBOOT") == 0 || strcmp(cmdname, "7") == 0)  {
000122  a1c9              ADR      r1,|L1.1096|
000124  a82c              ADD      r0,sp,#0xb0
000126  f7fffffe          BL       strcmp
00012a  2800              CMP      r0,#0
                  |L1.300|
00012c  d06c              BEQ      |L1.520|
00012e  a1c8              ADR      r1,|L1.1104|
000130  a82c              ADD      r0,sp,#0xb0
000132  f7fffffe          BL       strcmp
000136  2800              CMP      r0,#0
000138  d0f8              BEQ      |L1.300|
;;;408          printf ("\n\rReBooting.......\n\r");
;;;409          MicoSystemReboot();
;;;410        break;                              
;;;411      }
;;;412    
;;;413    	else if(strcmp(cmdname, "HELP") == 0 || strcmp(cmdname, "?") == 0)	{
00013a  a1c6              ADR      r1,|L1.1108|
00013c  a82c              ADD      r0,sp,#0xb0
00013e  f7fffffe          BL       strcmp
000142  2800              CMP      r0,#0
                  |L1.324|
000144  d073              BEQ      |L1.558|
000146  a1c5              ADR      r1,|L1.1116|
000148  a82c              ADD      r0,sp,#0xb0
00014a  f7fffffe          BL       strcmp
00014e  2800              CMP      r0,#0
000150  d0f8              BEQ      |L1.324|
;;;414        printf ( menu, MODEL, HARDWARE_REVISION );                       /* display command menu        */
;;;415    		break;
;;;416    	}
;;;417    
;;;418    	else if(strcmp(cmdname, "") == 0 )	{                         
000152  a1a7              ADR      r1,|L1.1008|
000154  a82c              ADD      r0,sp,#0xb0
000156  f7fffffe          BL       strcmp
00015a  2800              CMP      r0,#0
00015c  d003              BEQ      |L1.358|
;;;419    		break;
;;;420    	}
;;;421    	else{
;;;422    	    printf (ERROR_STR, "UNKNOWN COMMAND");
00015e  a1c0              ADR      r1,|L1.1120|
000160  48c3              LDR      r0,|L1.1136|
000162  f7fffffe          BL       printf
                  |L1.358|
;;;423    		break;
;;;424    	}
;;;425      }
;;;426    }
000166  b039              ADD      sp,sp,#0xe4
000168  e8bd8ff0          POP      {r4-r11,pc}
00016c  e000              B        |L1.368|
                  |L1.366|
00016e  e01a              B        |L1.422|
                  |L1.368|
000170  2300              MOVS     r3,#0                 ;253
000172  461a              MOV      r2,r3                 ;253
000174  a1bf              ADR      r1,|L1.1140|
000176  a80c              ADD      r0,sp,#0x30           ;253
000178  f7fffffe          BL       findCommandPara
00017c  1c40              ADDS     r0,r0,#1              ;253
00017e  d00b              BEQ      |L1.408|
000180  a0bd              ADR      r0,|L1.1144|
000182  f7fffffe          BL       __2printf
000186  2001              MOVS     r0,#1                 ;255
000188  f7fffffe          BL       MicoFlashInitialize
00018c  f44f4380          MOV      r3,#0x4000            ;256
000190  a2c1              ADR      r2,|L1.1176|
000192  4641              MOV      r1,r8                 ;256
000194  e01d              B        |L1.466|
                  |L1.406|
000196  e02d              B        |L1.500|
                  |L1.408|
000198  a0c4              ADR      r0,|L1.1196|
00019a  f7fffffe          BL       __2printf
00019e  f44f4280          MOV      r2,#0x4000            ;261
0001a2  4641              MOV      r1,r8                 ;261
0001a4  e022              B        |L1.492|
                  |L1.422|
0001a6  2300              MOVS     r3,#0                 ;266
0001a8  461a              MOV      r2,r3                 ;266
0001aa  a1b2              ADR      r1,|L1.1140|
0001ac  a80c              ADD      r0,sp,#0x30           ;266
0001ae  f7fffffe          BL       findCommandPara
0001b2  1c40              ADDS     r0,r0,#1              ;266
0001b4  d014              BEQ      |L1.480|
0001b6  a0c5              ADR      r0,|L1.1228|
0001b8  f7fffffe          BL       __2printf
0001bc  2001              MOVS     r0,#1                 ;268
0001be  f7fffffe          BL       MicoFlashInitialize
0001c2  f44f23a8          MOV      r3,#0x54000           ;269
0001c6  e002              B        |L1.462|
                  |L1.456|
0001c8  e032              B        |L1.560|
                  |L1.458|
0001ca  e04c              B        |L1.614|
                  |L1.460|
0001cc  e0cc              B        |L1.872|
                  |L1.462|
0001ce  a2c9              ADR      r2,|L1.1268|
0001d0  4649              MOV      r1,r9                 ;269
                  |L1.466|
0001d2  2001              MOVS     r0,#1                 ;256
0001d4  f7fffffe          BL       SerialUpload
                  |L1.472|
0001d8  2001              MOVS     r0,#1                 ;257
                  |L1.474|
0001da  f7fffffe          BL       MicoFlashFinalize
0001de  e724              B        |L1.42|
                  |L1.480|
0001e0  a0ca              ADR      r0,|L1.1292|
0001e2  f7fffffe          BL       __2printf
0001e6  f44f22a8          MOV      r2,#0x54000           ;274
0001ea  4649              MOV      r1,r9                 ;274
                  |L1.492|
0001ec  2001              MOVS     r0,#1                 ;261
                  |L1.494|
0001ee  f7fffffe          BL       SerialDownload
0001f2  e71a              B        |L1.42|
                  |L1.500|
0001f4  2300              MOVS     r3,#0                 ;281
0001f6  461a              MOV      r2,r3                 ;281
0001f8  a19e              ADR      r1,|L1.1140|
0001fa  a80c              ADD      r0,sp,#0x30           ;281
0001fc  f7fffffe          BL       findCommandPara
000200  1c40              ADDS     r0,r0,#1              ;281
000202  d00d              BEQ      |L1.544|
000204  e001              B        |L1.522|
                  |L1.518|
000206  e0c7              B        |L1.920|
                  |L1.520|
000208  e0cc              B        |L1.932|
                  |L1.522|
00020a  a0c9              ADR      r0,|L1.1328|
00020c  f7fffffe          BL       __2printf
000210  2001              MOVS     r0,#1                 ;283
000212  f7fffffe          BL       MicoFlashInitialize
000216  f44f2380          MOV      r3,#0x40000           ;284
00021a  a2cd              ADR      r2,|L1.1360|
00021c  4651              MOV      r1,r10                ;284
00021e  e7d8              B        |L1.466|
                  |L1.544|
000220  a0cf              ADR      r0,|L1.1376|
000222  f7fffffe          BL       __2printf
000226  f44f2280          MOV      r2,#0x40000           ;289
00022a  4651              MOV      r1,r10                ;289
00022c  e7de              B        |L1.492|
                  |L1.558|
00022e  e0bf              B        |L1.944|
                  |L1.560|
000230  2300              MOVS     r3,#0                 ;297
000232  461a              MOV      r2,r3                 ;297
000234  a1d2              ADR      r1,|L1.1408|
000236  a80c              ADD      r0,sp,#0x30           ;297
000238  f7fffffe          BL       findCommandPara
00023c  1c40              ADDS     r0,r0,#1              ;297
00023e  d00b              BEQ      |L1.600|
000240  a0d0              ADR      r0,|L1.1412|
000242  f7fffffe          BL       __2printf
000246  2001              MOVS     r0,#1                 ;299
000248  f7fffffe          BL       MicoFlashInitialize
00024c  465a              MOV      r2,r11                ;300
00024e  49d7              LDR      r1,|L1.1452|
000250  2001              MOVS     r0,#1                 ;300
000252  f7fffffe          BL       MicoFlashErase
000256  e7bf              B        |L1.472|
                  |L1.600|
000258  a0d5              ADR      r0,|L1.1456|
00025a  f7fffffe          BL       __2printf
00025e  f44f4280          MOV      r2,#0x4000            ;305
000262  49d2              LDR      r1,|L1.1452|
000264  e7c2              B        |L1.492|
                  |L1.614|
000266  2300              MOVS     r3,#0                 ;310
000268  461a              MOV      r2,r3                 ;310
00026a  a1da              ADR      r1,|L1.1492|
00026c  a80c              ADD      r0,sp,#0x30           ;310
00026e  f7fffffe          BL       findCommandPara
000272  1c40              ADDS     r0,r0,#1              ;310
000274  d001              BEQ      |L1.634|
000276  2401              MOVS     r4,#1                 ;311
000278  e008              B        |L1.652|
                  |L1.634|
00027a  23c8              MOVS     r3,#0xc8              ;312
00027c  2200              MOVS     r2,#0                 ;312
00027e  a1d6              ADR      r1,|L1.1496|
000280  a80c              ADD      r0,sp,#0x30           ;312
000282  f7fffffe          BL       findCommandPara
000286  1c40              ADDS     r0,r0,#1              ;312
000288  d023              BEQ      |L1.722|
00028a  2400              MOVS     r4,#0                 ;313
                  |L1.652|
00028c  2500              MOVS     r5,#0                 ;319
00028e  230a              MOVS     r3,#0xa               ;320
000290  aa32              ADD      r2,sp,#0xc8           ;320
000292  a1d2              ADR      r1,|L1.1500|
000294  a80c              ADD      r0,sp,#0x30           ;320
000296  f7fffffe          BL       findCommandPara
00029a  1c40              ADDS     r0,r0,#1              ;320
00029c  d012              BEQ      |L1.708|
00029e  a930              ADD      r1,sp,#0xc0           ;321
0002a0  a832              ADD      r0,sp,#0xc8           ;321
0002a2  f7fffffe          BL       Str2Int
0002a6  b1b0              CBZ      r0,|L1.726|
0002a8  230a              MOVS     r3,#0xa               ;325
0002aa  aa35              ADD      r2,sp,#0xd4           ;325
0002ac  a1cd              ADR      r1,|L1.1508|
0002ae  a80c              ADD      r0,sp,#0x30           ;325
0002b0  f7fffffe          BL       findCommandPara
0002b4  1c40              ADDS     r0,r0,#1              ;325
0002b6  d014              BEQ      |L1.738|
0002b8  a931              ADD      r1,sp,#0xc4           ;326
0002ba  a835              ADD      r0,sp,#0xd4           ;326
0002bc  f7fffffe          BL       Str2Int
0002c0  b168              CBZ      r0,|L1.734|
0002c2  2501              MOVS     r5,#1                 ;330
                  |L1.708|
0002c4  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;330
0002c8  4281              CMP      r1,r0                 ;339
0002ca  da0c              BGE      |L1.742|
0002cc  b165              CBZ      r5,|L1.744|
0002ce  a0c6              ADR      r0,|L1.1512|
0002d0  e002              B        |L1.728|
                  |L1.722|
0002d2  a0cc              ADR      r0,|L1.1540|
0002d4  e000              B        |L1.728|
                  |L1.726|
0002d6  a0d4              ADR      r0,|L1.1576|
                  |L1.728|
0002d8  f7fffffe          BL       __2printf
0002dc  e6a5              B        |L1.42|
                  |L1.734|
0002de  a0db              ADR      r0,|L1.1612|
0002e0  e7fa              B        |L1.728|
                  |L1.738|
0002e2  a0e2              ADR      r0,|L1.1644|
0002e4  e7f8              B        |L1.728|
                  |L1.742|
0002e6  b915              CBNZ     r5,|L1.750|
                  |L1.744|
0002e8  b1bc              CBZ      r4,|L1.794|
0002ea  e9cd8630          STRD     r8,r6,[sp,#0xc0]      ;345
                  |L1.750|
0002ee  2300              MOVS     r3,#0                 ;359
0002f0  461a              MOV      r2,r3                 ;359
0002f2  a1a3              ADR      r1,|L1.1408|
0002f4  a80c              ADD      r0,sp,#0x30           ;359
0002f6  f7fffffe          BL       findCommandPara
0002fa  1c40              ADDS     r0,r0,#1              ;359
0002fc  d00f              BEQ      |L1.798|
0002fe  e9dd1230          LDRD     r1,r2,[sp,#0xc0]      ;360
000302  a0e3              ADR      r0,|L1.1680|
000304  f7fffffe          BL       __2printf
000308  4620              MOV      r0,r4                 ;361
00030a  f7fffffe          BL       MicoFlashInitialize
00030e  e9dd1230          LDRD     r1,r2,[sp,#0xc0]      ;362
000312  4620              MOV      r0,r4                 ;362
000314  f7fffffe          BL       MicoFlashErase
000318  e019              B        |L1.846|
                  |L1.794|
00031a  a0e8              ADR      r0,|L1.1724|
00031c  e7dc              B        |L1.728|
                  |L1.798|
00031e  2300              MOVS     r3,#0                 ;367
000320  461a              MOV      r2,r3                 ;367
000322  a154              ADR      r1,|L1.1140|
000324  a80c              ADD      r0,sp,#0x30           ;367
000326  f7fffffe          BL       findCommandPara
00032a  1c40              ADDS     r0,r0,#1              ;367
00032c  d011              BEQ      |L1.850|
00032e  e9dd1230          LDRD     r1,r2,[sp,#0xc0]      ;368
000332  a0e8              ADR      r0,|L1.1748|
000334  f7fffffe          BL       __2printf
000338  4620              MOV      r0,r4                 ;369
00033a  f7fffffe          BL       MicoFlashInitialize
00033e  e9dd1030          LDRD     r1,r0,[sp,#0xc0]      ;369
000342  1a43              SUBS     r3,r0,r1              ;370
000344  4620              MOV      r0,r4                 ;370
000346  a2ee              ADR      r2,|L1.1792|
000348  1c5b              ADDS     r3,r3,#1              ;370
00034a  f7fffffe          BL       SerialUpload
                  |L1.846|
00034e  4620              MOV      r0,r4                 ;371
000350  e743              B        |L1.474|
                  |L1.850|
000352  e9dd1230          LDRD     r1,r2,[sp,#0xc0]      ;375
000356  a0ee              ADR      r0,|L1.1808|
000358  f7fffffe          BL       __2printf
00035c  e9dd1030          LDRD     r1,r0,[sp,#0xc0]      ;375
000360  1a42              SUBS     r2,r0,r1              ;376
000362  4620              MOV      r0,r4                 ;376
000364  1c52              ADDS     r2,r2,#1              ;376
000366  e742              B        |L1.494|
                  |L1.872|
000368  49f5              LDR      r1,|L1.1856|
00036a  4a15              LDR      r2,|L1.960|
00036c  48f6              LDR      r0,|L1.1864|
00036e  6849              LDR      r1,[r1,#4]            ;382  ; flash_name
000370  1e52              SUBS     r2,r2,#1              ;382
000372  e9cd2108          STRD     r2,r1,[sp,#0x20]      ;382
000376  4af3              LDR      r2,|L1.1860|
000378  e9cd1206          STRD     r1,r2,[sp,#0x18]      ;382
00037c  1e53              SUBS     r3,r2,#1              ;382
00037e  4a8b              LDR      r2,|L1.1452|
000380  e88d0806          STM      sp,{r1,r2,r11}        ;382
000384  e9cd9304          STRD     r9,r3,[sp,#0x10]      ;382
000388  e9cda60a          STRD     r10,r6,[sp,#0x28]     ;382
00038c  1e53              SUBS     r3,r2,#1              ;382
00038e  9103              STR      r1,[sp,#0xc]          ;382
000390  4642              MOV      r2,r8                 ;382
000392  f7fffffe          BL       printf
000396  e648              B        |L1.42|
                  |L1.920|
000398  a0ec              ADR      r0,|L1.1868|
00039a  f7fffffe          BL       __2printf
00039e  f7fffffe          BL       startApplication
0003a2  e642              B        |L1.42|
                  |L1.932|
0003a4  a0ee              ADR      r0,|L1.1888|
0003a6  f7fffffe          BL       __2printf
0003aa  f7fffffe          BL       MicoSystemReboot
0003ae  e6da              B        |L1.358|
                  |L1.944|
0003b0  a2f1              ADR      r2,|L1.1912|
0003b2  a1f3              ADR      r1,|L1.1920|
0003b4  48f4              LDR      r0,|L1.1928|
0003b6  f7fffffe          BL       printf
0003ba  e6d4              B        |L1.358|
                          ENDP

                  |L1.956|
                          DCD      0x0800c000
                  |L1.960|
                          DCD      0x080c0000
                  |L1.964|
                          DCD      0x08007fff
                  |L1.968|
                          DCD      0x080fffff
                  |L1.972|
0003cc  0a0d4d58          DCB      "\n\rMXCHIP> ",0
0003d0  43484950
0003d4  3e2000  
0003d7  00                DCB      0
                  |L1.984|
0003d8  424f4f54          DCB      "BOOTUPDATE",0
0003dc  55504441
0003e0  544500  
0003e3  00                DCB      0
                  |L1.996|
0003e4  3000              DCB      "0",0
0003e6  00                DCB      0
0003e7  00                DCB      0
                  |L1.1000|
0003e8  46575550          DCB      "FWUPDATE"
0003ec  44415445
                  |L1.1008|
0003f0  00                DCB      0
0003f1  00                DCB      0
0003f2  00                DCB      0
0003f3  00                DCB      0
                  |L1.1012|
0003f4  3100              DCB      "1",0
0003f6  00                DCB      0
0003f7  00                DCB      0
                  |L1.1016|
0003f8  44524956          DCB      "DRIVERUPDATE",0
0003fc  45525550
000400  44415445
000404  00      
000405  00                DCB      0
000406  00                DCB      0
000407  00                DCB      0
                  |L1.1032|
000408  3200              DCB      "2",0
00040a  00                DCB      0
00040b  00                DCB      0
                  |L1.1036|
00040c  50415241          DCB      "PARAUPDATE",0
000410  55504441
000414  544500  
000417  00                DCB      0
                  |L1.1048|
000418  3300              DCB      "3",0
00041a  00                DCB      0
00041b  00                DCB      0
                  |L1.1052|
00041c  464c4153          DCB      "FLASHUPDATE",0
000420  48555044
000424  41544500
                  |L1.1064|
000428  3400              DCB      "4",0
00042a  00                DCB      0
00042b  00                DCB      0
                  |L1.1068|
00042c  4d454d4f          DCB      "MEMORYMAP",0
000430  52594d41
000434  5000    
000436  00                DCB      0
000437  00                DCB      0
                  |L1.1080|
000438  3500              DCB      "5",0
00043a  00                DCB      0
00043b  00                DCB      0
                  |L1.1084|
00043c  424f4f54          DCB      "BOOT",0
000440  00      
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L1.1092|
000444  3600              DCB      "6",0
000446  00                DCB      0
000447  00                DCB      0
                  |L1.1096|
000448  5245424f          DCB      "REBOOT",0
00044c  4f5400  
00044f  00                DCB      0
                  |L1.1104|
000450  3700              DCB      "7",0
000452  00                DCB      0
000453  00                DCB      0
                  |L1.1108|
000454  48454c50          DCB      "HELP",0
000458  00      
000459  00                DCB      0
00045a  00                DCB      0
00045b  00                DCB      0
                  |L1.1116|
00045c  3f00              DCB      "?",0
00045e  00                DCB      0
00045f  00                DCB      0
                  |L1.1120|
000460  554e4b4e          DCB      "UNKNOWN COMMAND",0
000464  4f574e20
000468  434f4d4d
00046c  414e4400
                  |L1.1136|
                          DCD      ||.data||+0x173
                  |L1.1140|
000474  7200              DCB      "r",0
000476  00                DCB      0
000477  00                DCB      0
                  |L1.1144|
000478  0a0d5265          DCB      "\n\rRead Bootloader only......\n\r",0
00047c  61642042
000480  6f6f746c
000484  6f616465
000488  72206f6e
00048c  6c792e2e
000490  2e2e2e2e
000494  0a0d00  
000497  00                DCB      0
                  |L1.1176|
000498  426f6f74          DCB      "BootLoaderImage.bin",0
00049c  4c6f6164
0004a0  6572496d
0004a4  6167652e
0004a8  62696e00
                  |L1.1196|
0004ac  0a0d5570          DCB      "\n\rUpdating Bootloader......\n\r",0
0004b0  64617469
0004b4  6e672042
0004b8  6f6f746c
0004bc  6f616465
0004c0  722e2e2e
0004c4  2e2e2e0a
0004c8  0d00    
0004ca  00                DCB      0
0004cb  00                DCB      0
                  |L1.1228|
0004cc  0a0d5265          DCB      "\n\rRead MICO application only......\n\r",0
0004d0  6164204d
0004d4  49434f20
0004d8  6170706c
0004dc  69636174
0004e0  696f6e20
0004e4  6f6e6c79
0004e8  2e2e2e2e
0004ec  2e2e0a0d
0004f0  00      
0004f1  00                DCB      0
0004f2  00                DCB      0
0004f3  00                DCB      0
                  |L1.1268|
0004f4  4170706c          DCB      "ApplicationImage.bin",0
0004f8  69636174
0004fc  696f6e49
000500  6d616765
000504  2e62696e
000508  00      
000509  00                DCB      0
00050a  00                DCB      0
00050b  00                DCB      0
                  |L1.1292|
00050c  0a0d5570          DCB      "\n\rUpdating MICO application......\n\r",0
000510  64617469
000514  6e67204d
000518  49434f20
00051c  6170706c
000520  69636174
000524  696f6e2e
000528  2e2e2e2e
00052c  2e0a0d00
                  |L1.1328|
000530  0a0d5265          DCB      "\n\rRead RF driver only......\n\r",0
000534  61642052
000538  46206472
00053c  69766572
000540  206f6e6c
000544  792e2e2e
000548  2e2e2e0a
00054c  0d00    
00054e  00                DCB      0
00054f  00                DCB      0
                  |L1.1360|
000550  44726976          DCB      "DriverImage.bin",0
000554  6572496d
000558  6167652e
00055c  62696e00
                  |L1.1376|
000560  0a0d5570          DCB      "\n\rUpdating RF driver......\n\r",0
000564  64617469
000568  6e672052
00056c  46206472
000570  69766572
000574  2e2e2e2e
000578  2e2e0a0d
00057c  00      
00057d  00                DCB      0
00057e  00                DCB      0
00057f  00                DCB      0
                  |L1.1408|
000580  6500              DCB      "e",0
000582  00                DCB      0
000583  00                DCB      0
                  |L1.1412|
000584  0a0d4572          DCB      "\n\rErasing MICO settings only......\n\r",0
000588  6173696e
00058c  67204d49
000590  434f2073
000594  65747469
000598  6e677320
00059c  6f6e6c79
0005a0  2e2e2e2e
0005a4  2e2e0a0d
0005a8  00      
0005a9  00                DCB      0
0005aa  00                DCB      0
0005ab  00                DCB      0
                  |L1.1452|
                          DCD      0x08004000
                  |L1.1456|
0005b0  0a0d5570          DCB      "\n\rUpdating MICO settings......\n\r",0
0005b4  64617469
0005b8  6e67204d
0005bc  49434f20
0005c0  73657474
0005c4  696e6773
0005c8  2e2e2e2e
0005cc  2e2e0a0d
0005d0  00      
0005d1  00                DCB      0
0005d2  00                DCB      0
0005d3  00                DCB      0
                  |L1.1492|
0005d4  6900              DCB      "i",0
0005d6  00                DCB      0
0005d7  00                DCB      0
                  |L1.1496|
0005d8  7300              DCB      "s",0
0005da  00                DCB      0
0005db  00                DCB      0
                  |L1.1500|
0005dc  73746172          DCB      "start",0
0005e0  7400    
0005e2  00                DCB      0
0005e3  00                DCB      0
                  |L1.1508|
0005e4  656e6400          DCB      "end",0
                  |L1.1512|
0005e8  0a0d496c          DCB      "\n\rIllegal flash address.\n\r",0
0005ec  6c656761
0005f0  6c20666c
0005f4  61736820
0005f8  61646472
0005fc  6573732e
000600  0a0d00  
000603  00                DCB      0
                  |L1.1540|
000604  0a0d556e          DCB      "\n\rUnkown target type! Exiting...\n\r",0
000608  6b6f776e
00060c  20746172
000610  67657420
000614  74797065
000618  21204578
00061c  6974696e
000620  672e2e2e
000624  0a0d00  
000627  00                DCB      0
                  |L1.1576|
000628  0a0d496c          DCB      "\n\rIllegal flash start address.\n\r",0
00062c  6c656761
000630  6c20666c
000634  61736820
000638  73746172
00063c  74206164
000640  64726573
000644  732e0a0d
000648  00      
000649  00                DCB      0
00064a  00                DCB      0
00064b  00                DCB      0
                  |L1.1612|
00064c  0a0d496c          DCB      "\n\rIllegal flash end address.\n\r",0
000650  6c656761
000654  6c20666c
000658  61736820
00065c  656e6420
000660  61646472
000664  6573732e
000668  0a0d00  
00066b  00                DCB      0
                  |L1.1644|
00066c  0a0d466c          DCB      "\n\rFlash end address not found.\n\r",0
000670  61736820
000674  656e6420
000678  61646472
00067c  65737320
000680  6e6f7420
000684  666f756e
000688  642e0a0d
00068c  00      
00068d  00                DCB      0
00068e  00                DCB      0
00068f  00                DCB      0
                  |L1.1680|
000690  0a0d4572          DCB      "\n\rErasing flash content From 0x%x to 0x%x\n\r",0
000694  6173696e
000698  6720666c
00069c  61736820
0006a0  636f6e74
0006a4  656e7420
0006a8  46726f6d
0006ac  20307825
0006b0  7820746f
0006b4  20307825
0006b8  780a0d00
                  |L1.1724|
0006bc  0a0d5350          DCB      "\n\rSPI Flash not exist\n\r",0
0006c0  4920466c
0006c4  61736820
0006c8  6e6f7420
0006cc  65786973
0006d0  740a0d00
                  |L1.1748|
0006d4  0a0d5265          DCB      "\n\rRead flash content From 0x%x to 0x%x\n\r",0
0006d8  61642066
0006dc  6c617368
0006e0  20636f6e
0006e4  74656e74
0006e8  2046726f
0006ec  6d203078
0006f0  25782074
0006f4  6f203078
0006f8  25780a0d
0006fc  00      
0006fd  00                DCB      0
0006fe  00                DCB      0
0006ff  00                DCB      0
                  |L1.1792|
000700  466c6173          DCB      "FlashImage.bin",0
000704  68496d61
000708  67652e62
00070c  696e00  
00070f  00                DCB      0
                  |L1.1808|
000710  0a0d5570          DCB      "\n\rUpdating flash content From 0x%x to 0x%x\n\r",0
000714  64617469
000718  6e672066
00071c  6c617368
000720  20636f6e
000724  74656e74
000728  2046726f
00072c  6d203078
000730  25782074
000734  6f203078
000738  25780a0d
00073c  00      
00073d  00                DCB      0
00073e  00                DCB      0
00073f  00                DCB      0
                  |L1.1856|
                          DCD      flash_name
                  |L1.1860|
                          DCD      0x08060000
                  |L1.1864|
                          DCD      ||.data||
                  |L1.1868|
00074c  0a0d426f          DCB      "\n\rBooting.......\n\r",0
000750  6f74696e
000754  672e2e2e
000758  2e2e2e2e
00075c  0a0d00  
00075f  00                DCB      0
                  |L1.1888|
000760  0a0d5265          DCB      "\n\rReBooting.......\n\r",0
000764  426f6f74
000768  696e672e
00076c  2e2e2e2e
000770  2e2e0a0d
000774  00      
000775  00                DCB      0
000776  00                DCB      0
000777  00                DCB      0
                  |L1.1912|
000778  33313632          DCB      "3162",0
00077c  00      
00077d  00                DCB      0
00077e  00                DCB      0
00077f  00                DCB      0
                  |L1.1920|
000780  454d5733          DCB      "EMW3162",0
000784  31363200
                  |L1.1928|
                          DCD      menu

                          AREA ||i.SerialDownload||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  SerialDownload PROC
;;;157      */
;;;158    void SerialDownload(mico_flash_t flash, uint32_t flashdestination, int32_t maxRecvSize)
000000  b5fe              PUSH     {r1-r7,lr}
;;;159    {
000002  460d              MOV      r5,r1
;;;160      char Number[10] = "          ";
000004  a11a              ADR      r1,|L2.112|
000006  4614              MOV      r4,r2                 ;159
000008  4606              MOV      r6,r0                 ;159
00000a  c907              LDM      r1,{r0-r2}
00000c  e88d0007          STM      sp,{r0-r2}
;;;161      int32_t Size = 0;
;;;162    
;;;163      printf("Waiting for the file to be sent ... (press 'a' to abort)\n\r");
000010  a01a              ADR      r0,|L2.124|
000012  f7fffffe          BL       __2printf
;;;164      Size = Ymodem_Receive(&tab_1024[0], flash, flashdestination, maxRecvSize);
000016  4623              MOV      r3,r4
000018  462a              MOV      r2,r5
00001a  4631              MOV      r1,r6
00001c  4826              LDR      r0,|L2.184|
00001e  f7fffffe          BL       Ymodem_Receive
000022  1e04              SUBS     r4,r0,#0
;;;165      if (Size > 0)
000024  dd13              BLE      |L2.78|
;;;166      {
;;;167        printf("\n\n\r Programming Successfully!\n\r\r\n Name: ");
000026  a025              ADR      r0,|L2.188|
000028  f7fffffe          BL       __2printf
;;;168        printf("%s", FileName);
00002c  492e              LDR      r1,|L2.232|
00002e  a02f              ADR      r0,|L2.236|
000030  f7fffffe          BL       __2printf
;;;169        
;;;170        Int2Str((uint8_t *)Number, Size);
000034  4621              MOV      r1,r4
000036  4668              MOV      r0,sp
000038  f7fffffe          BL       Int2Str
;;;171        printf("\n\r Size: ");
00003c  a02c              ADR      r0,|L2.240|
00003e  f7fffffe          BL       __2printf
;;;172        printf("%s", Number);
000042  4669              MOV      r1,sp
000044  a029              ADR      r0,|L2.236|
000046  f7fffffe          BL       __2printf
;;;173        printf(" Bytes\r\n");
00004a  a02c              ADR      r0,|L2.252|
00004c  e008              B        |L2.96|
                  |L2.78|
;;;174      }
;;;175      else if (Size == -1)
00004e  1c60              ADDS     r0,r4,#1
000050  d005              BEQ      |L2.94|
;;;176      {
;;;177        printf("\n\n\rThe image size is higher than memory!\n\r");
;;;178      }
;;;179      else if (Size == -2)
000052  1ca0              ADDS     r0,r4,#2
000054  d007              BEQ      |L2.102|
000056  1ce4              ADDS     r4,r4,#3
;;;180      {
;;;181        printf("\n\n\rVerification failed!\n\r");
;;;182      }
;;;183      else if (Size == -3)
000058  d007              BEQ      |L2.106|
;;;184      {
;;;185        printf("\r\n\nAborted by user.\n\r");
;;;186      }
;;;187      else
;;;188      {
;;;189        printf("\n\rFailed to receive file!\n\r");
00005a  a02b              ADR      r0,|L2.264|
00005c  e000              B        |L2.96|
                  |L2.94|
00005e  a031              ADR      r0,|L2.292|
                  |L2.96|
000060  f7fffffe          BL       __2printf
;;;190      }
;;;191    }
000064  bdfe              POP      {r1-r7,pc}
                  |L2.102|
000066  a03a              ADR      r0,|L2.336|
000068  e7fa              B        |L2.96|
                  |L2.106|
00006a  a040              ADR      r0,|L2.364|
00006c  e7f8              B        |L2.96|
;;;192    
                          ENDP

00006e  0000              DCW      0x0000
                  |L2.112|
000070  20202020          DCB      "          ",0
000074  20202020
000078  202000  
00007b  00                DCB      0
                  |L2.124|
00007c  57616974          DCB      "Waiting for the file to be sent ... (press 'a' to abort"
000080  696e6720
000084  666f7220
000088  74686520
00008c  66696c65
000090  20746f20
000094  62652073
000098  656e7420
00009c  2e2e2e20
0000a0  28707265
0000a4  73732027
0000a8  61272074
0000ac  6f206162
0000b0  6f7274  
0000b3  290a0d00          DCB      ")\n\r",0
0000b7  00                DCB      0
                  |L2.184|
                          DCD      ||.bss||
                  |L2.188|
0000bc  0a0a0d20          DCB      "\n\n\r Programming Successfully!\n\r\r\n Name: ",0
0000c0  50726f67
0000c4  72616d6d
0000c8  696e6720
0000cc  53756363
0000d0  65737366
0000d4  756c6c79
0000d8  210a0d0d
0000dc  0a204e61
0000e0  6d653a20
0000e4  00      
0000e5  00                DCB      0
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L2.232|
                          DCD      ||.bss||+0x400
                  |L2.236|
0000ec  257300            DCB      "%s",0
0000ef  00                DCB      0
                  |L2.240|
0000f0  0a0d2053          DCB      "\n\r Size: ",0
0000f4  697a653a
0000f8  2000    
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L2.252|
0000fc  20427974          DCB      " Bytes\r\n",0
000100  65730d0a
000104  00      
000105  00                DCB      0
000106  00                DCB      0
000107  00                DCB      0
                  |L2.264|
000108  0a0d4661          DCB      "\n\rFailed to receive file!\n\r",0
00010c  696c6564
000110  20746f20
000114  72656365
000118  69766520
00011c  66696c65
000120  210a0d00
                  |L2.292|
000124  0a0a0d54          DCB      "\n\n\rThe image size is higher than memory!\n\r",0
000128  68652069
00012c  6d616765
000130  2073697a
000134  65206973
000138  20686967
00013c  68657220
000140  7468616e
000144  206d656d
000148  6f727921
00014c  0a0d00  
00014f  00                DCB      0
                  |L2.336|
000150  0a0a0d56          DCB      "\n\n\rVerification failed!\n\r",0
000154  65726966
000158  69636174
00015c  696f6e20
000160  6661696c
000164  6564210a
000168  0d00    
00016a  00                DCB      0
00016b  00                DCB      0
                  |L2.364|
00016c  0d0a0a41          DCB      "\r\n\nAborted by user.\n\r",0
000170  626f7274
000174  65642062
000178  79207573
00017c  65722e0a
000180  0d00    
000182  00                DCB      0
000183  00                DCB      0

                          AREA ||i.SerialUpload||, CODE, READONLY, ALIGN=2

                  SerialUpload PROC
;;;197      */
;;;198    void SerialUpload(mico_flash_t flash, uint32_t flashdestination, char *fileName, int32_t maxRecvSize)
000000  b5f8              PUSH     {r3-r7,lr}
;;;199    {
000002  4607              MOV      r7,r0
000004  461c              MOV      r4,r3
000006  4615              MOV      r5,r2
000008  460e              MOV      r6,r1
;;;200      uint8_t status = 0;
;;;201      uint8_t key;
;;;202    
;;;203      printf("Select Receive File\n\r");
00000a  a00d              ADR      r0,|L3.64|
00000c  f7fffffe          BL       __2printf
;;;204      MicoUartRecv( STDIO_UART, &key, 1, MICO_NEVER_TIMEOUT );
000010  f04f33ff          MOV      r3,#0xffffffff
000014  2201              MOVS     r2,#1
000016  4669              MOV      r1,sp
000018  2000              MOVS     r0,#0
00001a  f7fffffe          BL       MicoUartRecv
;;;205    
;;;206      if (key == CRC16)
00001e  f89d0000          LDRB     r0,[sp,#0]
000022  2843              CMP      r0,#0x43
000024  d10b              BNE      |L3.62|
;;;207      {
;;;208        /* Transmit the flash image through ymodem protocol */
;;;209        status = Ymodem_Transmit(flash, flashdestination, (uint8_t *)fileName, maxRecvSize);
000026  4623              MOV      r3,r4
000028  462a              MOV      r2,r5
00002a  4631              MOV      r1,r6
00002c  4638              MOV      r0,r7
00002e  f7fffffe          BL       Ymodem_Transmit
;;;210    
;;;211        if (status != 0)
000032  b108              CBZ      r0,|L3.56|
;;;212        {
;;;213          printf("\n\rError Occurred while Transmitting File\n\r");
000034  a008              ADR      r0,|L3.88|
000036  e000              B        |L3.58|
                  |L3.56|
;;;214        }
;;;215        else
;;;216        {
;;;217          printf("\n\rFile uploaded successfully \n\r");
000038  a012              ADR      r0,|L3.132|
                  |L3.58|
00003a  f7fffffe          BL       __2printf
                  |L3.62|
;;;218        }
;;;219      }
;;;220    }
00003e  bdf8              POP      {r3-r7,pc}
;;;221    
                          ENDP

                  |L3.64|
000040  53656c65          DCB      "Select Receive File\n\r",0
000044  63742052
000048  65636569
00004c  76652046
000050  696c650a
000054  0d00    
000056  00                DCB      0
000057  00                DCB      0
                  |L3.88|
000058  0a0d4572          DCB      "\n\rError Occurred while Transmitting File\n\r",0
00005c  726f7220
000060  4f636375
000064  72726564
000068  20776869
00006c  6c652054
000070  72616e73
000074  6d697474
000078  696e6720
00007c  46696c65
000080  0a0d00  
000083  00                DCB      0
                  |L3.132|
000084  0a0d4669          DCB      "\n\rFile uploaded successfully \n\r",0
000088  6c652075
00008c  706c6f61
000090  64656420
000094  73756363
000098  65737366
00009c  756c6c79
0000a0  200a0d00

                          AREA ||i.findCommandPara||, CODE, READONLY, ALIGN=1

                  findCommandPara PROC
;;;110      */
;;;111    int findCommandPara(char *commandBody, char *para, char *paraBody, int paraBodyLength)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;112    {
;;;113      int i = 0;
000004  2700              MOVS     r7,#0
000006  4699              MOV      r9,r3                 ;112
000008  4690              MOV      r8,r2                 ;112
00000a  460e              MOV      r6,r1                 ;112
00000c  4604              MOV      r4,r0                 ;112
;;;114      int k, j;
;;;115      int retval = -1;
00000e  1e7d              SUBS     r5,r7,#1
000010  e003              B        |L4.26|
                  |L4.18|
;;;116      
;;;117      for (i = 0; para[i] != 0; i++)  {                /* convert to upper characters */
;;;118        para[i] = toupper(para[i]);
000012  f7fffffe          BL       toupper
000016  55f0              STRB     r0,[r6,r7]
000018  1c7f              ADDS     r7,r7,#1
                  |L4.26|
00001a  5df0              LDRB     r0,[r6,r7]            ;117
00001c  2800              CMP      r0,#0                 ;117
00001e  d1f8              BNE      |L4.18|
000020  e015              B        |L4.78|
                  |L4.34|
;;;119      }
;;;120    
;;;121      i = 0;
;;;122      while(commandBody[i] != 0) {
;;;123        if(commandBody[i] == '-' ){
000022  292d              CMP      r1,#0x2d
000024  d112              BNE      |L4.76|
;;;124          for(j=i+1, k=0; *(para+k)!=0x0; j++, k++ ){
000026  1c42              ADDS     r2,r0,#1
000028  2100              MOVS     r1,#0
00002a  e004              B        |L4.54|
                  |L4.44|
;;;125            if(commandBody[j] != *(para+k)){
00002c  5ca7              LDRB     r7,[r4,r2]
00002e  429f              CMP      r7,r3
000030  d105              BNE      |L4.62|
000032  1c49              ADDS     r1,r1,#1
000034  1c52              ADDS     r2,r2,#1
                  |L4.54|
000036  5c73              LDRB     r3,[r6,r1]            ;124
000038  2b00              CMP      r3,#0                 ;124
00003a  d1f7              BNE      |L4.44|
00003c  e002              B        |L4.68|
                  |L4.62|
;;;126              break;
;;;127            } 
;;;128          }
;;;129    
;;;130          if(*(para+k)!=0x0 || (commandBody[j]!=' '&& commandBody[j]!=0x0)){   /* para not found!             */
00003e  f0130fff          TST      r3,#0xff
000042  d103              BNE      |L4.76|
                  |L4.68|
000044  5ca1              LDRB     r1,[r4,r2]
000046  2920              CMP      r1,#0x20
000048  d00d              BEQ      |L4.102|
00004a  b161              CBZ      r1,|L4.102|
                  |L4.76|
00004c  1c40              ADDS     r0,r0,#1
                  |L4.78|
00004e  5c21              LDRB     r1,[r4,r0]            ;122
000050  2900              CMP      r1,#0                 ;122
000052  d1e6              BNE      |L4.34|
                  |L4.84|
;;;131            i++;
;;;132            continue;
;;;133          }
;;;134    
;;;135          retval = 0;
;;;136          for (k = j+1; commandBody[k] == ' '; k++);      /* skip blanks                 */
;;;137          for(j = 0; commandBody[k] != ' ' && commandBody[k] != 0 && commandBody[k] != '-'; j++, k++){   /* para body found!             */
;;;138            if(paraBody) paraBody[j] = commandBody[k];
;;;139            retval ++;
;;;140            if( retval == paraBodyLength) goto exit;
;;;141          }
;;;142          goto exit;
;;;143        }
;;;144        i++;
;;;145      }
;;;146    
;;;147    exit:
;;;148      if(paraBody) paraBody[retval] = 0x0;
000054  f1b80f00          CMP      r8,#0
000058  d002              BEQ      |L4.96|
00005a  2100              MOVS     r1,#0
00005c  f8081005          STRB     r1,[r8,r5]
                  |L4.96|
;;;149      return retval;
000060  4628              MOV      r0,r5
;;;150    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L4.102|
000066  2500              MOVS     r5,#0                 ;135
                  |L4.104|
000068  1c52              ADDS     r2,r2,#1              ;135
00006a  5ca0              LDRB     r0,[r4,r2]            ;136
00006c  2820              CMP      r0,#0x20              ;136
00006e  d0fb              BEQ      |L4.104|
000070  2000              MOVS     r0,#0                 ;137
000072  e00c              B        |L4.142|
                  |L4.116|
000074  f1b80f00          CMP      r8,#0                 ;138
000078  d001              BEQ      |L4.126|
00007a  f8081000          STRB     r1,[r8,r0]            ;138
                  |L4.126|
00007e  1c6d              ADDS     r5,r5,#1              ;138
000080  454d              CMP      r5,r9                 ;140
000082  d0e7              BEQ      |L4.84|
000084  1c52              ADDS     r2,r2,#1              ;140
000086  1c40              ADDS     r0,r0,#1              ;137
000088  5ca1              LDRB     r1,[r4,r2]            ;137
00008a  2920              CMP      r1,#0x20              ;137
00008c  d0e2              BEQ      |L4.84|
                  |L4.142|
00008e  5ca1              LDRB     r1,[r4,r2]            ;137
000090  2900              CMP      r1,#0                 ;137
000092  d0df              BEQ      |L4.84|
000094  292d              CMP      r1,#0x2d              ;137
000096  d1ed              BNE      |L4.116|
000098  e7dc              B        |L4.84|
;;;151    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  tab_1024
                          %        1024
                  FileName
                          %        256

                          AREA ||.data||, DATA, ALIGN=0

                  MEMMAP
000000  0d0a2b2a          DCB      0x0d,0x0a,0x2b,0x2a
000004  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000008  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
00000c  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000010  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000014  2a2a2a20          DCB      0x2a,0x2a,0x2a,0x20
000018  4d49434f          DCB      0x4d,0x49,0x43,0x4f
00001c  20466c61          DCB      0x20,0x46,0x6c,0x61
000020  7368204d          DCB      0x73,0x68,0x20,0x4d
000024  6170202a          DCB      0x61,0x70,0x20,0x2a
000028  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
00002c  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000030  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000034  2a2b0d0a          DCB      0x2a,0x2b,0x0d,0x0a
000038  2b2d2d20          DCB      0x2b,0x2d,0x2d,0x20
00003c  436f6e74          DCB      0x43,0x6f,0x6e,0x74
000040  656e7420          DCB      0x65,0x6e,0x74,0x20
000044  2d2d2b2d          DCB      0x2d,0x2d,0x2b,0x2d
000048  2d20466c          DCB      0x2d,0x20,0x46,0x6c
00004c  61736820          DCB      0x61,0x73,0x68,0x20
000050  2d2d2b2d          DCB      0x2d,0x2d,0x2b,0x2d
000054  2d205374          DCB      0x2d,0x20,0x53,0x74
000058  61727420          DCB      0x61,0x72,0x74,0x20
00005c  2d2d2d2b          DCB      0x2d,0x2d,0x2d,0x2b
000060  2d2d2d20          DCB      0x2d,0x2d,0x2d,0x20
000064  456e6420          DCB      0x45,0x6e,0x64,0x20
000068  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
00006c  2b0d0a7c          DCB      0x2b,0x0d,0x0a,0x7c
000070  20426f6f          DCB      0x20,0x42,0x6f,0x6f
000074  746c6f61          DCB      0x74,0x6c,0x6f,0x61
000078  64657220          DCB      0x64,0x65,0x72,0x20
00007c  207c2025          DCB      0x20,0x7c,0x20,0x25
000080  3873207c          DCB      0x38,0x73,0x20,0x7c
000084  20307825          DCB      0x20,0x30,0x78,0x25
000088  30387820          DCB      0x30,0x38,0x78,0x20
00008c  7c203078          DCB      0x7c,0x20,0x30,0x78
000090  25303878          DCB      0x25,0x30,0x38,0x78
000094  207c0d0a          DCB      0x20,0x7c,0x0d,0x0a
000098  7c205365          DCB      0x7c,0x20,0x53,0x65
00009c  7474696e          DCB      0x74,0x74,0x69,0x6e
0000a0  67732020          DCB      0x67,0x73,0x20,0x20
0000a4  20207c20          DCB      0x20,0x20,0x7c,0x20
0000a8  25387320          DCB      0x25,0x38,0x73,0x20
0000ac  7c203078          DCB      0x7c,0x20,0x30,0x78
0000b0  25303878          DCB      0x25,0x30,0x38,0x78
0000b4  207c2030          DCB      0x20,0x7c,0x20,0x30
0000b8  78253038          DCB      0x78,0x25,0x30,0x38
0000bc  78207c0d          DCB      0x78,0x20,0x7c,0x0d
0000c0  0a7c2041          DCB      0x0a,0x7c,0x20,0x41
0000c4  70706c69          DCB      0x70,0x70,0x6c,0x69
0000c8  63617469          DCB      0x63,0x61,0x74,0x69
0000cc  6f6e207c          DCB      0x6f,0x6e,0x20,0x7c
0000d0  20253873          DCB      0x20,0x25,0x38,0x73
0000d4  207c2030          DCB      0x20,0x7c,0x20,0x30
0000d8  78253038          DCB      0x78,0x25,0x30,0x38
0000dc  78207c20          DCB      0x78,0x20,0x7c,0x20
0000e0  30782530          DCB      0x30,0x78,0x25,0x30
0000e4  3878207c          DCB      0x38,0x78,0x20,0x7c
0000e8  0d0a7c20          DCB      0x0d,0x0a,0x7c,0x20
0000ec  4f544120          DCB      0x4f,0x54,0x41,0x20
0000f0  53746f72          DCB      0x53,0x74,0x6f,0x72
0000f4  61676520          DCB      0x61,0x67,0x65,0x20
0000f8  7c202538          DCB      0x7c,0x20,0x25,0x38
0000fc  73207c20          DCB      0x73,0x20,0x7c,0x20
000100  30782530          DCB      0x30,0x78,0x25,0x30
000104  3878207c          DCB      0x38,0x78,0x20,0x7c
000108  20307825          DCB      0x20,0x30,0x78,0x25
00010c  30387820          DCB      0x30,0x38,0x78,0x20
000110  7c0d0a7c          DCB      0x7c,0x0d,0x0a,0x7c
000114  20524620          DCB      0x20,0x52,0x46,0x20
000118  44726976          DCB      0x44,0x72,0x69,0x76
00011c  65722020          DCB      0x65,0x72,0x20,0x20
000120  207c2025          DCB      0x20,0x7c,0x20,0x25
000124  3873207c          DCB      0x38,0x73,0x20,0x7c
000128  20307825          DCB      0x20,0x30,0x78,0x25
00012c  30387820          DCB      0x30,0x38,0x78,0x20
000130  7c203078          DCB      0x7c,0x20,0x30,0x78
000134  25303878          DCB      0x25,0x30,0x38,0x78
000138  207c0d0a          DCB      0x20,0x7c,0x0d,0x0a
00013c  2b2d2d2d          DCB      0x2b,0x2d,0x2d,0x2d
000140  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000144  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000148  2d2d2b2d          DCB      0x2d,0x2d,0x2b,0x2d
00014c  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000150  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000154  2d2b2d2d          DCB      0x2d,0x2b,0x2d,0x2d
000158  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
00015c  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000160  2d2d2b2d          DCB      0x2d,0x2d,0x2b,0x2d
000164  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000168  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
00016c  2d2d2d2b          DCB      0x2d,0x2d,0x2d,0x2b
000170  0d0a00            DCB      0x0d,0x0a,0x00
                  ERROR_STR
000173  0a                DCB      0x0a
000174  0d2a2a2a          DCB      0x0d,0x2a,0x2a,0x2a
000178  20455252          DCB      0x20,0x45,0x52,0x52
00017c  4f523a20          DCB      0x4f,0x52,0x3a,0x20
000180  25730a0d          DCB      0x25,0x73,0x0a,0x0d
000184  00                DCB      0x00
