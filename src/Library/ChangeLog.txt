版本号：31620002.020
日期：2015-01-29
1. 增加了一组用于调试用的CLI API。
2. 提高了Airkiss的成功率，针对40MHz的路由器做了优化，提高了红米同TPlink的40MHz路由器的成功率；使用SSID的CRC值提高了配置速度和正确性。
3. 增加API：int shutdown(int s, int how)用于开关socket，其中how定义如下：
	 bit1=RX, bit2=TX；所以how==1表示关闭接收，how==2表示关闭发送，how==3表示关闭socket，等于close(s)。
	 
版本号：31620002.019
日期：2015-01-16
1. 修正了FreeRTOS的BUG，可能出现锁无法工作，信号量无法等待预设的超时时间。
2. Easylink Plus支持小MTU包格式，定位包在小MTU下的长度缩减，其中0x5AA,0x5AB,0x5AC这3个包的长度直接减少为0xAA,0xAB,0xAC，Index定位包的长度减少0x450。
3. 修正了Airkiss对于SSID和Key长度很短会无法配置成功的问题；优化了Airkiss的配置成功率。
4. 修正了频繁调用wlan_disconnect可能导致系统异常的问题。
5. 修正了双模式下UDP发送广播数据无法每个接口都发送出去的问题。

版本号：31620002.018
日期：2014-12-23
1. 优化了EasyLink Plus，Airkiss的成功率。
2. 优化了连接AP容易失败的问题，join_fail的错误值更准确。
3. 产测程序自动扫描。
4. Healmonitor会检测Bus Credit，如果太长时间无法发送数据，会产生wifi_reboot_event.
5. Socket的select支持event类型。

版本号：31620002.017
日期：2014-10-30
1. 优化了库的内存开销：去掉了IO Work Thread，减少了work thread的Stack Size，减少了tcpip thread的stack size。
2. 优化了Easylink Plus的发包模式，增加了发送序号帧，具有更好的配置成功率。
3. 新增API：StartNetworkWithbssid用于连接需要做BSSID过滤的AP。其他联网API都不会检查AP的BSSID。
4. 优化了联网的过程，减少了返回错误代码6的概率，增加了联网的成功率。
5. 支持Airkiss。
6. 新增回调函数：void mico_rtos_stack_overflow(char *taskname)用于提示线程的stack overflow。
7. 用户程序新增全局变量：int mico_timer_queue_len = 5;用户可以自定义Timer队列的长度。

版本号：31620002.016
日期：2014-09-30
1. Easylink 1.0 is replaced with easylink plus.
2. 连接AP会检查BSSID的设置。
3. 支持Ethernet Interface。
4. MICO OS Timer可以在中断处理函数中执行。

版本号：31620002.015
日期：2014-08-26
1. 实现了的WPS的支持。
2. 修正了mico_rtos_push_to_queue不能在中断服务程序中执行的问题。

版本号：31620002.014
日期：2014-08-20
1. 修正了在MCU低功耗模式下时间计算不准确的问题。
2. 修正了双模式下，Station联网成功以后，SoftAP下面有新的客户端连接上来，就无法访问外网的问题。
3. 修正了TCP Socket在non-blocking模式下发送数据的行为，之前是在这种模式下如果发送的数据包大于缓冲区的长度就直接返回失败，现在是发送当前缓冲区中能发送的字节数。

版本号：31620002.013
日期：2014-08-05
1. 新增API用于设置和读取hostname。char *gethostname( char *name, int len )，char *sethostname( char *name )
2. 修正了从一个路由器切换到另外一个路由器可能出现ARP缓存影响工作的问题，现在netif down的时候清除所有ARP缓存。
3. 修正了在联网过程中无法扫描可能出错的问题。
4. 修改了Healmonitor的工作机制，由之前的ping替换为现在的arping，原因是可能存在某些网关不允许ping。
5. SoftAP模式下对所有的DNS请求都回复为模块的IP地址。
6. 修正了EasyLink可能会配置错误的问题。
7. 修正了TCP setsockopt无法配置TCP Keepalive时间间隔的问题。
8. StartAdvNetwork可以不配置SSID只配置BSSID，通过BSSID进行联网。


版本号：31620002.012
日期：2014-06-27
1. 新增API用于返回当前memory的使用情况。
struct mxchip_mallinfo {
  int num_of_chunks;  /* number of free chunks */
  int total_memory;  /* maximum total allocated space */
  int allocted_memory; /* total allocated space */
  int free_memory; /* total free space */
};
struct mxchip_mallinfo* mico_memory_info(void);


版本号：31620002.011
日期：2014-06-10
1. 新增API用于设置和读取RTC时间。
typedef struct
{
    u8 sec;
    u8 min;
    u8 hr;
    u8 weekday;/* 1-sunday... 7-saturday */
    u8 date;
    u8 month;
    u8 year;
}rtc_time_t;

int mico_get_rtc_time(rtc_time_t* time);
int mico_set_rtc_time(rtc_time_t* time);
2. RTC在重启之后不会重新计时。

版本号：31620002.010
日期：2014-06-05
1. 修正了AP的SSID为32个字节的时候，模块无法连接的问题。
2. 新增一个socket option来设置TCP Server允许的最大连接数，当最大连接数到达这个最大值以后，新的连接请求到达，就会关闭一个最老的不活动的Client来接收新的连接请求。默认是5个。设置方式如下：
  TCP_NODELAY = 0x01,    /* don't delay send to coalesce packets */
  TCP_KEEPALIVE = 0x02,    /* send KEEPALIVE probes when idle for pcb->keep_idle milliseconds */
  TCP_KEEPIDLE = 0x03,    /* set pcb->keep_idle  - Same as TCP_KEEPALIVE, but use seconds for get/setsockopt */
  TCP_KEEPINTVL = 0x04,    /* set pcb->keep_intvl - Use seconds for get/setsockopt */
  TCP_KEEPCNT = 0x05,    /* set pcb->keep_cnt   - Use number of probes sent for get/setsockopt */
  TCP_CONN_NUM = 0x06,    /* get the connection num for a TCP server, can't set */
  TCP_MAX_CONN_NUM = 0x07,/* get/set the connection num for a TCP server*/
#define IPPROTO_TCP 6

int opt;
opt = 2;
setsockopt(fd_listen, IPPROTO_TCP, TCP_MAX_CONN_NUM, &opt, sizeof(opt));


